AWSTemplateFormatVersion: '2010-09-09'
Description: ECS Fargate service with ALB for Laravel contracts_services microservice

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID where ECS and ALB will be deployed
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Two public subnet IDs for ALB and ECS tasks
  EcrImageUri:
    Type: String
    Description: Full ECR image URI, e.g. 123456789012.dkr.ecr.region.amazonaws.com/contract-service:latest

Resources:
  # ALB Security Group
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for Application Load Balancer
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  # ECS Tasks Security Group - allow only ALB SG inbound
  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for ECS tasks
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref ALBSecurityGroup
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  # ECS Cluster
  ContractCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: contract-service-cluster

  # IAM Role for ECS Task execution
  ContractTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: contract-task-execution-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  # ECS Task Definition
  ContractTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: contract-service-task
      Cpu: '512'
      Memory: '1024'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ContractTaskExecutionRole.Arn
      RuntimePlatform:
        CpuArchitecture: X86_64
        OperatingSystemFamily: LINUX
      ContainerDefinitions:
        - Name: contract-container
          Image: !Ref EcrImageUri
          PortMappings:
            - ContainerPort: 80
          Essential: true

  # ALB
  AppLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: contract-service-alb
      Subnets: !Ref SubnetIds
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Scheme: internet-facing
      Type: application

  # Target Group
  AppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: contract-service-target-group
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VpcId
      TargetType: ip
      HealthCheckPath: /api/contracts/

  # ALB Listener
  AppListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref AppLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref AppTargetGroup

  # ECS Service
  ContractService:
    Type: AWS::ECS::Service
    DependsOn: AppListener
    Properties:
      Cluster: !Ref ContractCluster
      ServiceName: contract-service
      LaunchType: FARGATE
      DesiredCount: 1
      TaskDefinition: !Ref ContractTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: !Ref SubnetIds
          SecurityGroups:
            - !Ref ECSSecurityGroup
      LoadBalancers:
        - ContainerName: contract-container
          ContainerPort: 80
          TargetGroupArn: !Ref AppTargetGroup
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50

Outputs:
  LoadBalancerDNSName:
    Description: DNS name of the load balancer
    Value: !GetAtt AppLoadBalancer.DNSName
